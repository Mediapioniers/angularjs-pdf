{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap f5a1e919d6fd5e86d26e","webpack:///angular-pdf.min.js","webpack:///./src/angular-pdf.directive.js","webpack:///./src/angular-pdf.module.js","webpack:///external \"angular\""],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_0__","__webpack_require__","moduleId","installedModules","i","l","modules","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","./src/angular-pdf.directive.js","NgPdf","$window","$document","$log","backingScale","canvas","ctx","getContext","devicePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","setCanvasDimensions","w","h","ratio","width","Math","floor","height","style","setTransform","initCanvas","element","angular","addClass","append","restrict","templateUrl","attr","link","scope","attrs","clearCanvas","clearRect","renderPDF","params","url","creds","httpHeaders","length","pdfLoaderTask","PDFJS","getDocument","onProgress","onPassword","promise","then","_pdfDoc","isFunction","onLoad","pdfDoc","renderPage","pageToDisplay","$apply","pageCount","numPages","error","onError","renderTask","debug","pdfUrl","isFinite","page","parseInt","pageFit","scale","limitHeight","limitcanvasheight","createElement","usecredentials","windowEl","renderingPage","renderedPage","css","on","scroll","scrollY","disableWorker","pageNum","num","force","isNaN","log","_internalRenderTask","cancel","getPage","viewport","pageWidthScale","renderContext","getViewport","clientRect","getBoundingClientRect","min","canvasContext","render","onPageRender","catch","reason","undefined","goPrevious","goNext","zoomIn","parseFloat","zoomOut","fit","changePage","rotate","getAttribute","setAttribute","$watch","newVal","destroy","$on","e","./src/angular-pdf.module.js","Pdf","_angular2","obj","default","_angular","directive","0"],"mappings":"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","file":"angular-pdf.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdf\", [\"angular\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdf\"] = factory(require(\"angular\"));\n\telse\n\t\troot[\"pdf\"] = factory(root[\"angular\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/angular-pdf.module.js\");\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f5a1e919d6fd5e86d26e","/*!\n * Angular-PDF: An Angularjs directive <ng-pdf> to display PDF in the browser with PDFJS.\n * @version 2.0.0\n * @link https://github.com/sayanee/angular-pdf#readme\n * @license MIT License, http://www.opensource.org/licenses/MIT\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdf\", [\"angular\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdf\"] = factory(require(\"angular\"));\n\telse\n\t\troot[\"pdf\"] = factory(root[\"angular\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"./src/angular-pdf.module.js\");\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"./src/angular-pdf.directive.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar NgPdf = exports.NgPdf = [\"$window\", \"$document\", \"$log\", function NgPdf($window, $document, $log) {\n    'ngInject';\n\n    var backingScale = function backingScale(canvas) {\n        var ctx = canvas.getContext('2d');\n        var dpr = $window.devicePixelRatio || 1;\n        var bsr = ctx.webkitBackingStorePixelRatio || ctx.mozBackingStorePixelRatio || ctx.msBackingStorePixelRatio || ctx.oBackingStorePixelRatio || ctx.backingStorePixelRatio || 1;\n\n        return dpr / bsr;\n    };\n\n    var setCanvasDimensions = function setCanvasDimensions(canvas, w, h) {\n        var ratio = backingScale(canvas);\n        canvas.width = Math.floor(w * ratio);\n        canvas.height = Math.floor(h * ratio);\n        canvas.style.width = Math.floor(w) + 'px';\n        canvas.style.height = Math.floor(h) + 'px';\n        canvas.getContext('2d').setTransform(ratio, 0, 0, ratio, 0, 0);\n        return canvas;\n    };\n\n    var initCanvas = function initCanvas(element, canvas) {\n        angular.element(canvas).addClass('rotate0');\n        element.append(canvas);\n    };\n\n    return {\n        restrict: 'E',\n        templateUrl: function templateUrl(element, attr) {\n            return attr.templateUrl ? attr.templateUrl : 'partials/viewer.html';\n        },\n        link: function link(scope, element, attrs) {\n            var renderTask = null;\n            var pdfLoaderTask = null;\n            var debug = false;\n            var url = scope.pdfUrl;\n            var httpHeaders = scope.httpHeaders;\n            var pdfDoc = null;\n            var pageToDisplay = isFinite(attrs.page) ? parseInt(attrs.page) : 1;\n            var pageFit = attrs.scale === 'page-fit';\n            var limitHeight = attrs.limitcanvasheight === '1';\n            var scale = attrs.scale > 0 ? attrs.scale : 1;\n            var canvas = $document[0].createElement('canvas');\n            initCanvas(element, canvas);\n            var creds = attrs.usecredentials;\n            debug = attrs.hasOwnProperty('debug') ? attrs.debug : false;\n\n            var ctx = canvas.getContext('2d');\n            var windowEl = angular.element($window);\n            var renderingPage = {};\n            var renderedPage = void 0;\n\n            element.css('display', 'block');\n\n            windowEl.on('scroll', function () {\n                scope.$apply(function () {\n                    scope.scroll = windowEl[0].scrollY;\n                });\n            });\n\n            PDFJS.disableWorker = true;\n            scope.pageNum = pageToDisplay;\n\n            scope.renderPage = function (num) {\n                var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n\n                if (isNaN(num) || !pdfDoc || renderingPage[num] || renderedPage === num && !force) {\n                    return;\n                }\n\n                debug && $log.log('angular-pdf: renderPage(%s)', num);\n\n                renderingPage[num] = true;\n\n                if (renderTask) {\n                    renderTask._internalRenderTask.cancel();\n                }\n\n                pdfDoc.getPage(num).then(function (page) {\n                    var viewport = void 0;\n                    var pageWidthScale = void 0;\n                    var renderContext = void 0;\n\n                    if (pageFit) {\n                        viewport = page.getViewport({ scale: 1 });\n                        var clientRect = element[0].getBoundingClientRect();\n                        pageWidthScale = clientRect.width / viewport.width;\n                        if (limitHeight) {\n                            pageWidthScale = Math.min(pageWidthScale, clientRect.height / viewport.height);\n                        }\n                        scale = pageWidthScale;\n                    }\n                    viewport = page.getViewport({ scale: scale });\n\n                    setCanvasDimensions(canvas, viewport.width, viewport.height);\n\n                    renderContext = {\n                        canvasContext: ctx,\n                        viewport: viewport\n                    };\n\n                    renderTask = page.render(renderContext);\n                    renderTask.promise.then(function () {\n                        if (angular.isFunction(scope.onPageRender)) {\n                            scope.onPageRender();\n                        }\n                        renderTask = null;\n                        delete renderingPage[num];\n                        renderedPage = num;\n                    }).catch(function (reason) {\n                        $log.log('angular-pdf: ', reason);\n                        renderTask = null;\n                        delete renderingPage[num];\n                        renderedPage = undefined;\n                    });\n                });\n            };\n\n            scope.goPrevious = function () {\n                if (scope.pageToDisplay <= 1) {\n                    return;\n                }\n                scope.pageToDisplay = parseInt(scope.pageToDisplay) - 1;\n                scope.pageNum = scope.pageToDisplay;\n            };\n\n            scope.goNext = function () {\n                if (scope.pageToDisplay >= pdfDoc.numPages) {\n                    return;\n                }\n                scope.pageToDisplay = parseInt(scope.pageToDisplay) + 1;\n                scope.pageNum = scope.pageToDisplay;\n            };\n\n            scope.zoomIn = function () {\n                pageFit = false;\n                scale = parseFloat(scale) + 0.2;\n                scope.renderPage(scope.pageToDisplay, true);\n                return scale;\n            };\n\n            scope.zoomOut = function () {\n                pageFit = false;\n                scale = parseFloat(scale) - 0.2;\n                scope.renderPage(scope.pageToDisplay, true);\n                return scale;\n            };\n\n            scope.fit = function () {\n                pageFit = true;\n                scope.renderPage(scope.pageToDisplay, true);\n            };\n\n            scope.changePage = function () {\n                scope.renderPage(scope.pageToDisplay, true);\n            };\n\n            scope.rotate = function () {\n                if (canvas.getAttribute('class') === 'rotate0') {\n                    canvas.setAttribute('class', 'rotate90');\n                } else if (canvas.getAttribute('class') === 'rotate90') {\n                    canvas.setAttribute('class', 'rotate180');\n                } else if (canvas.getAttribute('class') === 'rotate180') {\n                    canvas.setAttribute('class', 'rotate270');\n                } else {\n                    canvas.setAttribute('class', 'rotate0');\n                }\n            };\n\n            function clearCanvas() {\n                if (ctx) {\n                    ctx.clearRect(0, 0, canvas.width, canvas.height);\n                }\n            }\n\n            function renderPDF() {\n                clearCanvas();\n\n                var params = {\n                    'url': url,\n                    'withCredentials': creds\n                };\n\n                if (httpHeaders) {\n                    params.httpHeaders = httpHeaders;\n                }\n\n                if (url && url.length) {\n                    pdfLoaderTask = PDFJS.getDocument(params);\n                    pdfLoaderTask.onProgress = scope.onProgress;\n                    pdfLoaderTask.onPassword = scope.onPassword;\n                    pdfLoaderTask.promise.then(function (_pdfDoc) {\n                        if (angular.isFunction(scope.onLoad)) {\n                            scope.onLoad();\n                        }\n\n                        pdfDoc = _pdfDoc;\n                        scope.renderPage(scope.pageToDisplay);\n\n                        scope.$apply(function () {\n                            scope.pageCount = _pdfDoc.numPages;\n                        });\n                    }, function (error) {\n                        if (error) {\n                            if (angular.isFunction(scope.onError)) {\n                                scope.onError(error);\n                            }\n                        }\n                    });\n                }\n            }\n\n            scope.$watch('pageNum', function (newVal) {\n                scope.pageToDisplay = parseInt(newVal);\n                if (pdfDoc !== null) {\n                    scope.renderPage(scope.pageToDisplay);\n                }\n            });\n\n            scope.$watch('pdfUrl', function (newVal) {\n                if (!!newVal) {\n                    debug && $log.log('angular-pdf: pdfUrl value change detected: ', scope.pdfUrl);\n                    url = newVal;\n                    scope.pageNum = scope.pageToDisplay = pageToDisplay;\n                    if (pdfLoaderTask) {\n                        pdfLoaderTask.destroy().then(function () {\n                            renderPDF();\n                        });\n                    } else {\n                        renderPDF();\n                    }\n                }\n            });\n\n            scope.$on('$destroy', function (e) {\n                debug && $log.log('angular-pdf: Destroying scope', e, scope, pdfLoaderTask);\n                if (pdfLoaderTask) {\n                    pdfLoaderTask.destroy().then(function () {\n                        pdfLoaderTask = null;\n                        pdfDoc = null;\n                    });\n                }\n            });\n        }\n    };\n}];\n\n/***/ }),\n\n/***/ \"./src/angular-pdf.module.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Pdf = undefined;\n\nvar _angular = __webpack_require__(0);\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nvar _angularPdf = __webpack_require__(\"./src/angular-pdf.directive.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Pdf = exports.Pdf = _angular2.default.module('pdf', []).directive('ngPdf', _angularPdf.NgPdf).name;\n\nexports.default = Pdf;\n\n/***/ }),\n\n/***/ 0:\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n/***/ })\n\n/******/ });\n});\n\n\n// WEBPACK FOOTER //\n// angular-pdf.min.js","export const NgPdf = ($window, $document, $log) => {\n    'ngInject';\n\n    const backingScale = canvas => {\n        const ctx = canvas.getContext('2d');\n        const dpr = $window.devicePixelRatio || 1;\n        const bsr = ctx.webkitBackingStorePixelRatio ||\n            ctx.mozBackingStorePixelRatio ||\n            ctx.msBackingStorePixelRatio ||\n            ctx.oBackingStorePixelRatio ||\n            ctx.backingStorePixelRatio || 1;\n\n        return dpr / bsr;\n    };\n\n    const setCanvasDimensions = (canvas, w, h) => {\n        const ratio = backingScale(canvas);\n        canvas.width = Math.floor(w * ratio);\n        canvas.height = Math.floor(h * ratio);\n        canvas.style.width = `${Math.floor(w)}px`;\n        canvas.style.height = `${Math.floor(h)}px`;\n        canvas.getContext('2d').setTransform(ratio, 0, 0, ratio, 0, 0);\n        return canvas;\n    };\n\n    const initCanvas = (element, canvas) => {\n        angular.element(canvas).addClass('rotate0');\n        element.append(canvas);\n    };\n\n    return {\n        restrict: 'E',\n        templateUrl(element, attr) {\n            return attr.templateUrl ? attr.templateUrl : 'partials/viewer.html';\n        },\n        link(scope, element, attrs) {\n            let renderTask = null;\n            let pdfLoaderTask = null;\n            let debug = false;\n            let url = scope.pdfUrl;\n            let httpHeaders = scope.httpHeaders;\n            let pdfDoc = null;\n            let pageToDisplay = isFinite(attrs.page) ? parseInt(attrs.page) : 1;\n            let pageFit = attrs.scale === 'page-fit';\n            let limitHeight = attrs.limitcanvasheight === '1';\n            let scale = attrs.scale > 0 ? attrs.scale : 1;\n            let canvas = $document[0].createElement('canvas');\n            initCanvas(element, canvas);\n            let creds = attrs.usecredentials;\n            debug = attrs.hasOwnProperty('debug') ? attrs.debug : false;\n\n            let ctx = canvas.getContext('2d');\n            let windowEl = angular.element($window);\n            const renderingPage = {};\n            let renderedPage;\n\n            element.css('display', 'block');\n\n            windowEl.on('scroll', () => {\n                scope.$apply(() => {\n                    scope.scroll = windowEl[0].scrollY;\n                });\n            });\n\n            PDFJS.disableWorker = true;\n            scope.pageNum = pageToDisplay;\n\n            scope.renderPage = (num, force = false) => {\n\n                if (isNaN(num) || !pdfDoc || renderingPage[num] || (renderedPage === num && !force)) {\n                    return;\n                }\n\n                debug && $log.log('angular-pdf: renderPage(%s)', num);\n\n                renderingPage[num] = true;\n\n                if (renderTask) {\n                    renderTask._internalRenderTask.cancel();\n                }\n\n                pdfDoc.getPage(num).then(page => {\n                    let viewport;\n                    let pageWidthScale;\n                    let renderContext;\n\n                    if (pageFit) {\n                        viewport = page.getViewport({scale: 1});\n                        const clientRect = element[0].getBoundingClientRect();\n                        pageWidthScale = clientRect.width / viewport.width;\n                        if (limitHeight) {\n                            pageWidthScale = Math.min(pageWidthScale, clientRect.height / viewport.height);\n                        }\n                        scale = pageWidthScale;\n                    }\n                    viewport = page.getViewport({scale});\n\n                    setCanvasDimensions(canvas, viewport.width, viewport.height);\n\n                    renderContext = {\n                        canvasContext: ctx,\n                        viewport\n                    };\n\n                    renderTask = page.render(renderContext);\n                    renderTask.promise.then(() => {\n                        if (angular.isFunction(scope.onPageRender)) {\n                            scope.onPageRender();\n                        }\n                        renderTask = null;\n                        delete renderingPage[num];\n                        renderedPage = num;\n                    }).catch(reason => {\n                        $log.log('angular-pdf: ',reason);\n                        renderTask = null;\n                        delete renderingPage[num];\n                        renderedPage = undefined;\n                    });\n                });\n            };\n\n            scope.goPrevious = () => {\n                if (scope.pageToDisplay <= 1) {\n                    return;\n                }\n                scope.pageToDisplay = parseInt(scope.pageToDisplay) - 1;\n                scope.pageNum = scope.pageToDisplay;\n            };\n\n            scope.goNext = () => {\n                if (scope.pageToDisplay >= pdfDoc.numPages) {\n                    return;\n                }\n                scope.pageToDisplay = parseInt(scope.pageToDisplay) + 1;\n                scope.pageNum = scope.pageToDisplay;\n            };\n\n            scope.zoomIn = () => {\n                pageFit = false;\n                scale = parseFloat(scale) + 0.2;\n                scope.renderPage(scope.pageToDisplay, true);\n                return scale;\n            };\n\n            scope.zoomOut = () => {\n                pageFit = false;\n                scale = parseFloat(scale) - 0.2;\n                scope.renderPage(scope.pageToDisplay, true);\n                return scale;\n            };\n\n            scope.fit = () => {\n                pageFit = true;\n                scope.renderPage(scope.pageToDisplay, true);\n            };\n\n            scope.changePage = () => {\n                scope.renderPage(scope.pageToDisplay, true);\n            };\n\n            scope.rotate = () => {\n                if (canvas.getAttribute('class') === 'rotate0') {\n                    canvas.setAttribute('class', 'rotate90');\n                } else if (canvas.getAttribute('class') === 'rotate90') {\n                    canvas.setAttribute('class', 'rotate180');\n                } else if (canvas.getAttribute('class') === 'rotate180') {\n                    canvas.setAttribute('class', 'rotate270');\n                } else {\n                    canvas.setAttribute('class', 'rotate0');\n                }\n            };\n\n            function clearCanvas() {\n                if (ctx) {\n                    ctx.clearRect(0, 0, canvas.width, canvas.height);\n                }\n            }\n\n            function renderPDF() {\n                clearCanvas();\n\n                let params = {\n                    'url': url,\n                    'withCredentials': creds\n                };\n\n                if (httpHeaders) {\n                    params.httpHeaders = httpHeaders;\n                }\n\n                if (url && url.length) {\n                    pdfLoaderTask = PDFJS.getDocument(params);\n                    pdfLoaderTask.onProgress = scope.onProgress;\n                    pdfLoaderTask.onPassword = scope.onPassword;\n                    pdfLoaderTask.promise.then(\n                        _pdfDoc => {\n                            if (angular.isFunction(scope.onLoad)) {\n                                scope.onLoad();\n                            }\n\n                            pdfDoc = _pdfDoc;\n                            scope.renderPage(scope.pageToDisplay);\n\n                            scope.$apply(() => {\n                                scope.pageCount = _pdfDoc.numPages;\n                            });\n                        }, error => {\n                            if (error) {\n                                if (angular.isFunction(scope.onError)) {\n                                    scope.onError(error);\n                                }\n                            }\n                        }\n                    );\n                }\n            }\n\n            scope.$watch('pageNum', newVal => {\n                scope.pageToDisplay = parseInt(newVal);\n                if (pdfDoc !== null) {\n                    scope.renderPage(scope.pageToDisplay);\n                }\n            });\n\n            scope.$watch('pdfUrl', newVal => {\n                if (!!newVal) {\n                    debug && $log.log('angular-pdf: pdfUrl value change detected: ', scope.pdfUrl);\n                    url = newVal;\n                    scope.pageNum = scope.pageToDisplay = pageToDisplay;\n                    if (pdfLoaderTask) {\n                        pdfLoaderTask.destroy().then(() => {\n                            renderPDF();\n                        });\n                    } else {\n                        renderPDF();\n                    }\n                }\n            });\n\n            scope.$on('$destroy', function(e) {\n                debug && $log.log('angular-pdf: Destroying scope', e, scope, pdfLoaderTask);\n                if (pdfLoaderTask) {\n                    pdfLoaderTask.destroy().then(() => {\n                        pdfLoaderTask = null;\n                        pdfDoc = null;\n                    });\n                }\n            });\n        }\n    };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/angular-pdf.directive.js","import angular from 'angular';\nimport { NgPdf } from './angular-pdf.directive'\n\nexport const Pdf = angular\n  .module('pdf', [])\n  .directive('ngPdf', NgPdf)\n  .name;\n\nexport default Pdf;\n\n\n\n// WEBPACK FOOTER //\n// ./src/angular-pdf.module.js","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"angular\"\n// module id = 0\n// module chunks = 0"],"sourceRoot":""}