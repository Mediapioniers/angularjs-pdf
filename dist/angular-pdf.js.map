{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 349f8949f1630299463a","webpack:///./src/angular-pdf.directive.js","webpack:///./src/angular-pdf.module.js","webpack:///external \"angular\""],"names":["NgPdf","$window","$document","$log","backingScale","ctx","canvas","getContext","dpr","devicePixelRatio","bsr","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","setCanvasDimensions","w","h","ratio","width","Math","floor","height","style","setTransform","initCanvas","element","angular","addClass","append","restrict","templateUrl","attr","link","scope","attrs","renderTask","pdfLoaderTask","debug","url","pdfUrl","httpHeaders","pdfDoc","pageToDisplay","isFinite","page","parseInt","pageFit","scale","limitHeight","limitcanvasheight","createElement","creds","usecredentials","hasOwnProperty","windowEl","renderingPage","renderedPage","css","on","$apply","scroll","scrollY","PDFJS","disableWorker","pageNum","renderPage","num","force","isNaN","log","_internalRenderTask","cancel","getPage","then","viewport","pageWidthScale","renderContext","getViewport","clientRect","getBoundingClientRect","min","canvasContext","render","promise","isFunction","onPageRender","catch","reason","undefined","goPrevious","goNext","numPages","zoomIn","parseFloat","zoomOut","fit","changePage","rotate","getAttribute","setAttribute","clearCanvas","clearRect","renderPDF","params","length","getDocument","onProgress","onPassword","onLoad","_pdfDoc","pageCount","error","onError","$watch","newVal","destroy","$on","e","Pdf","module","directive","name"],"mappings":"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","file":"angular-pdf.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdf\", [\"angular\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdf\"] = factory(require(\"angular\"));\n\telse\n\t\troot[\"pdf\"] = factory(root[\"angular\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/angular-pdf.module.js\");\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 349f8949f1630299463a","export const NgPdf = ($window, $document, $log) => {\n    'ngInject';\n\n    const backingScale = canvas => {\n        const ctx = canvas.getContext('2d');\n        const dpr = $window.devicePixelRatio || 1;\n        const bsr = ctx.webkitBackingStorePixelRatio ||\n                    ctx.mozBackingStorePixelRatio ||\n                    ctx.msBackingStorePixelRatio ||\n                    ctx.oBackingStorePixelRatio ||\n                    ctx.backingStorePixelRatio || 1;\n\n        return dpr / bsr;\n    };\n\n    const setCanvasDimensions = (canvas, w, h) => {\n        const ratio = backingScale(canvas);\n        canvas.width = Math.floor(w * ratio);\n        canvas.height = Math.floor(h * ratio);\n        canvas.style.width = `${Math.floor(w)}px`;\n        canvas.style.height = `${Math.floor(h)}px`;\n        canvas.getContext('2d').setTransform(ratio, 0, 0, ratio, 0, 0);\n        return canvas;\n    };\n\n    const initCanvas = (element, canvas) => {\n        angular.element(canvas).addClass('rotate0');\n        element.append(canvas);\n    };\n\n    return {\n        restrict: 'E',\n        templateUrl(element, attr) {\n            return attr.templateUrl ? attr.templateUrl : 'partials/viewer.html';\n        },\n        link(scope, element, attrs) {\n            let renderTask = null;\n            let pdfLoaderTask = null;\n            let debug = false;\n            let url = scope.pdfUrl;\n            let httpHeaders = scope.httpHeaders;\n            let pdfDoc = null;\n            let pageToDisplay = isFinite(attrs.page) ? parseInt(attrs.page) : 1;\n            let pageFit = attrs.scale === 'page-fit';\n            let limitHeight = attrs.limitcanvasheight === '1';\n            let scale = attrs.scale > 0 ? attrs.scale : 1;\n            let canvas = $document[0].createElement('canvas');\n            initCanvas(element, canvas);\n            let creds = attrs.usecredentials;\n            debug = attrs.hasOwnProperty('debug') ? attrs.debug : false;\n\n            let ctx = canvas.getContext('2d');\n            let windowEl = angular.element($window);\n            const renderingPage = {};\n            let renderedPage;\n\n            element.css('display', 'block');\n\n            windowEl.on('scroll', () => {\n                scope.$apply(() => {\n                    scope.scroll = windowEl[0].scrollY;\n                });\n            });\n\n            PDFJS.disableWorker = true;\n            scope.pageNum = pageToDisplay;\n\n            scope.renderPage = (num, force = false) => {\n\n                if (isNaN(num) || !pdfDoc || renderingPage[num] || (renderedPage === num && !force)) {\n                    return;\n                }\n\n                debug && $log.log('angular-pdf: renderPage(%s)', num);\n\n                renderingPage[num] = true;\n\n                if (renderTask) {\n                    renderTask._internalRenderTask.cancel();\n                }\n\n                pdfDoc.getPage(num).then(page => {\n                    let viewport;\n                    let pageWidthScale;\n                    let renderContext;\n\n                    if (pageFit) {\n                        viewport = page.getViewport({scale: 1});\n                        const clientRect = element[0].getBoundingClientRect();\n                        pageWidthScale = clientRect.width / viewport.width;\n                        if (limitHeight) {\n                            pageWidthScale = Math.min(pageWidthScale, clientRect.height / viewport.height);\n                        }\n                        scale = pageWidthScale;\n                    }\n                    viewport = page.getViewport({scale});\n\n                    setCanvasDimensions(canvas, viewport.width, viewport.height);\n\n                    renderContext = {\n                        canvasContext: ctx,\n                        viewport\n                    };\n\n                    renderTask = page.render(renderContext);\n                    renderTask.promise.then(() => {\n                        if (angular.isFunction(scope.onPageRender)) {\n                            scope.onPageRender();\n                        }\n                        renderTask = null;\n                        delete renderingPage[num];\n                        renderedPage = num;\n                    }).catch(reason => {\n                        $log.log('angular-pdf: ', reason);\n                        renderTask = null;\n                        delete renderingPage[num];\n                        renderedPage = undefined;\n                    });\n                });\n            };\n\n            scope.goPrevious = () => {\n                if (scope.pageToDisplay <= 1) {\n                    return;\n                }\n                scope.pageToDisplay = parseInt(scope.pageToDisplay) - 1;\n                scope.pageNum = scope.pageToDisplay;\n            };\n\n            scope.goNext = () => {\n                if (scope.pageToDisplay >= pdfDoc.numPages) {\n                    return;\n                }\n                scope.pageToDisplay = parseInt(scope.pageToDisplay) + 1;\n                scope.pageNum = scope.pageToDisplay;\n            };\n\n            scope.zoomIn = () => {\n                pageFit = false;\n                scale = parseFloat(scale) + 0.2;\n                scope.renderPage(scope.pageToDisplay, true);\n                return scale;\n            };\n\n            scope.zoomOut = () => {\n                pageFit = false;\n                scale = parseFloat(scale) - 0.2;\n                scope.renderPage(scope.pageToDisplay, true);\n                return scale;\n            };\n\n            scope.fit = () => {\n                pageFit = true;\n                scope.renderPage(scope.pageToDisplay, true);\n            };\n\n            scope.changePage = () => {\n                scope.renderPage(scope.pageToDisplay, true);\n            };\n\n            scope.rotate = () => {\n                if (canvas.getAttribute('class') === 'rotate0') {\n                    canvas.setAttribute('class', 'rotate90');\n                } else if (canvas.getAttribute('class') === 'rotate90') {\n                    canvas.setAttribute('class', 'rotate180');\n                } else if (canvas.getAttribute('class') === 'rotate180') {\n                    canvas.setAttribute('class', 'rotate270');\n                } else {\n                    canvas.setAttribute('class', 'rotate0');\n                }\n            };\n\n            function clearCanvas() {\n                if (ctx) {\n                    ctx.clearRect(0, 0, canvas.width, canvas.height);\n                }\n            }\n\n            function renderPDF() {\n                clearCanvas();\n\n                let params = {\n                    'url': url,\n                    'withCredentials': creds\n                };\n\n                if (httpHeaders) {\n                    params.httpHeaders = httpHeaders;\n                }\n\n                if (url && url.length) {\n                    pdfLoaderTask = PDFJS.getDocument(params);\n                    pdfLoaderTask.onProgress = scope.onProgress;\n                    pdfLoaderTask.onPassword = scope.onPassword;\n                    pdfLoaderTask.promise.then(\n                        _pdfDoc => {\n                            if (angular.isFunction(scope.onLoad)) {\n                                scope.onLoad();\n                            }\n\n                            pdfDoc = _pdfDoc;\n                            scope.renderPage(scope.pageToDisplay);\n\n                            scope.$apply(() => {\n                                scope.pageCount = _pdfDoc.numPages;\n                            });\n                        }, error => {\n                            if (error) {\n                                if (angular.isFunction(scope.onError)) {\n                                    scope.onError(error);\n                                }\n                            }\n                        }\n                    );\n                }\n            }\n\n            scope.$watch('pageNum', newVal => {\n                scope.pageToDisplay = parseInt(newVal);\n                if (pdfDoc !== null) {\n                    scope.renderPage(scope.pageToDisplay);\n                }\n            });\n\n            scope.$watch('pdfUrl', newVal => {\n                if (!!newVal) {\n                    debug && $log.log('angular-pdf: pdfUrl value change detected: ', scope.pdfUrl);\n                    url = newVal;\n                    scope.pageNum = scope.pageToDisplay = isNaN(pageToDisplay) ? 1 : pageToDisplay;\n                    if (pdfLoaderTask) {\n                        pdfLoaderTask.destroy().then(() => {\n                            renderPDF();\n                        });\n                    } else {\n                        renderPDF();\n                    }\n                }\n            });\n\n            scope.$on('$destroy', function(e) {\n                debug && $log.log('angular-pdf: Destroying scope', e, scope, pdfLoaderTask);\n                if (pdfLoaderTask) {\n                    pdfLoaderTask.destroy().then(() => {\n                        pdfLoaderTask = null;\n                        pdfDoc = null;\n                    });\n                }\n            });\n        }\n    };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/angular-pdf.directive.js","import angular from 'angular';\nimport { NgPdf } from './angular-pdf.directive'\n\nexport const Pdf = angular\n  .module('pdf', [])\n  .directive('ngPdf', NgPdf)\n  .name;\n\nexport default Pdf;\n\n\n\n// WEBPACK FOOTER //\n// ./src/angular-pdf.module.js","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"angular\"\n// module id = 0\n// module chunks = 0"],"sourceRoot":""}